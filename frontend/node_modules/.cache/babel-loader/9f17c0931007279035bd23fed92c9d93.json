{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\pratik web\\\\z-insta\\\\frontend\\\\src\\\\components\\\\Registration.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { UserRegistration } from '../services/RegistrationService';\nimport axios from 'axios';\nimport Message from '../elements/Message';\nimport Error from '../elements/Error';\nimport { REGISTRATION_MESSAGE, ERROR_IN_REGISTRATION } from '../MessageBundle';\nexport default class Registration extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      token: '',\n      RegistrationUsername: '',\n      RegistrationEmail: '',\n      RegistrationPassword: '',\n      register: false,\n      error: false,\n      fieldErrors: {},\n      registerError: null\n    };\n    this.onTextboxChangeRegistrationUsername = this.onTextboxChangeRegistrationUsername.bind(this);\n    this.onTextboxChangeRegistrationEmail = this.onTextboxChangeRegistrationEmail.bind(this);\n    this.onTextboxChangeRegistrationPassword = this.onTextboxChangeRegistrationPassword.bind(this);\n    this.onSignUp = this.onSignUp.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: false\n    });\n  }\n\n  onTextboxChangeRegistrationUsername(event) {\n    this.setState({\n      RegistrationUsername: event.target.value\n    });\n  }\n\n  onTextboxChangeRegistrationEmail(event) {\n    this.setState({\n      RegistrationEmail: event.target.value\n    });\n  }\n\n  onTextboxChangeRegistrationPassword(event) {\n    this.setState({\n      RegistrationPassword: event.target.value\n    });\n  }\n\n  async onSignUp() {\n    const {\n      RegistrationUsername,\n      RegistrationEmail,\n      RegistrationPassword\n    } = this.state;\n    this.setState({\n      isLoading: true\n    });\n    this.setState({\n      fieldErrors: {},\n      registerError: null\n    });\n    const data = {\n      email: RegistrationEmail,\n      username: RegistrationUsername,\n      password: RegistrationPassword\n    }; // axios.post('http://localhost:4000/users/register', data)\n    //     .then(res => {\n    //         console.log('res:', res);\n    //         if (res.status===200) {\n    //             this.setState ({\n    //                 RegistrationUsername:'',\n    //                 RegistrationEmail:'',\n    //                 RegistrationPassword:'',\n    //                 register: true,\n    //                 error: false,\n    //                 isLoading:false,\n    //         });\n    //         } else\n    //             this.setState ({\n    //             error: true,\n    //             register: false,\n    //             isLoading:false,\n    //         });\n    // .catch(function (error) {\n    //     console.log(error);\n    // });\n    // });\n\n    try {\n      const response = await UserRegistration(data); // if (registerStatus.status === 200) {\n\n      console.log(response.data);\n      this.setState({\n        RegistrationUsername: '',\n        RegistrationEmail: '',\n        RegistrationPassword: '',\n        register: true,\n        error: false,\n        isLoading: false,\n        fieldErrors: {},\n        registerError: null\n      });\n    } catch (err) {\n      console.log(err.response.data.errors);\n\n      if (err.response.data.errors) {\n        this.setState({\n          error: true,\n          register: false,\n          isLoading: false,\n          fieldErrors: err.response.data.errors,\n          registerError: err.response.data\n        });\n      } else {\n        this.setState({\n          error: true,\n          register: false,\n          isLoading: false,\n          fieldErrors: err.response.data.msg,\n          registerError: err.response.data\n        });\n      }\n    }\n  }\n\n  render() {\n    const {\n      isLoading,\n      token,\n      register,\n      error,\n      registerError,\n      RegistrationUsername,\n      RegistrationEmail,\n      RegistrationPassword,\n      fieldErrors\n    } = this.state;\n\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Registration\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"username\",\n          placeholder: \"Username\",\n          value: RegistrationUsername,\n          onChange: this.onTextboxChangeRegistrationUsername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: RegistrationEmail,\n          onChange: this.onTextboxChangeRegistrationEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), fieldErrors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: fieldErrors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: RegistrationPassword,\n          onChange: this.onTextboxChangeRegistrationPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), fieldErrors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: fieldErrors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onSignUp,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), JSON.stringify(this.state), ' ', registerError && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: registerError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 22\n      }, this), ' ', error && /*#__PURE__*/_jsxDEV(Error, {\n        message: ERROR_IN_REGISTRATION\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 27\n      }, this), ' ', register && /*#__PURE__*/_jsxDEV(Message, {\n        message: REGISTRATION_MESSAGE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 30\n      }, this), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n;","map":{"version":3,"sources":["C:/pratik web/z-insta/frontend/src/components/Registration.js"],"names":["React","Component","Link","UserRegistration","axios","Message","Error","REGISTRATION_MESSAGE","ERROR_IN_REGISTRATION","Registration","constructor","props","state","isLoading","token","RegistrationUsername","RegistrationEmail","RegistrationPassword","register","error","fieldErrors","registerError","onTextboxChangeRegistrationUsername","bind","onTextboxChangeRegistrationEmail","onTextboxChangeRegistrationPassword","onSignUp","componentDidMount","setState","event","target","value","data","email","username","password","response","console","log","err","errors","msg","render","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserRegistration } from '../services/RegistrationService';\r\nimport axios from 'axios';\r\nimport Message from '../elements/Message';\r\nimport Error from '../elements/Error';\r\nimport {\r\n    REGISTRATION_MESSAGE,\r\n    ERROR_IN_REGISTRATION,\r\n  } from '../MessageBundle';\r\n\r\nexport default class Registration extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading : true,\r\n            token:'',\r\n            RegistrationUsername:'',\r\n            RegistrationEmail:'',\r\n            RegistrationPassword:'',\r\n            register: false,\r\n            error: false,\r\n            fieldErrors: {},\r\n            registerError: null\r\n        };\r\n\r\n        this.onTextboxChangeRegistrationUsername = this.onTextboxChangeRegistrationUsername.bind(this);\r\n        this.onTextboxChangeRegistrationEmail = this.onTextboxChangeRegistrationEmail.bind(this);\r\n        this.onTextboxChangeRegistrationPassword = this.onTextboxChangeRegistrationPassword.bind(this);\r\n        this.onSignUp = this.onSignUp.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n          isLoading: false\r\n        });\r\n    };\r\n\r\n    onTextboxChangeRegistrationUsername(event) {\r\n        this.setState({\r\n            RegistrationUsername: event.target.value,\r\n        });\r\n    }\r\n\r\n    onTextboxChangeRegistrationEmail(event) {\r\n        this.setState({\r\n            RegistrationEmail: event.target.value,\r\n        });\r\n    }\r\n\r\n    onTextboxChangeRegistrationPassword(event) {\r\n        this.setState({\r\n            RegistrationPassword: event.target.value,\r\n        });\r\n    }\r\n\r\n    async onSignUp() {\r\n        const {\r\n            RegistrationUsername,\r\n            RegistrationEmail,\r\n            RegistrationPassword\r\n        } = this.state;\r\n\r\n        this.setState({\r\n           isLoading: true,\r\n        });\r\n\r\n        this.setState({\r\n            fieldErrors: {},\r\n            registerError: null\r\n        })\r\n      \r\n\r\n        const data = {\r\n            email:RegistrationEmail,\r\n            username: RegistrationUsername,\r\n            password: RegistrationPassword,\r\n        };\r\n\r\n        // axios.post('http://localhost:4000/users/register', data)\r\n        //     .then(res => {\r\n        //         console.log('res:', res);\r\n        //         if (res.status===200) {\r\n        //             this.setState ({\r\n        //                 RegistrationUsername:'',\r\n        //                 RegistrationEmail:'',\r\n        //                 RegistrationPassword:'',\r\n        //                 register: true,\r\n        //                 error: false,\r\n        //                 isLoading:false,\r\n        //         });\r\n        //         } else\r\n        //             this.setState ({\r\n        //             error: true,\r\n        //             register: false,\r\n        //             isLoading:false,\r\n        //         });\r\n            // .catch(function (error) {\r\n            //     console.log(error);\r\n            // });\r\n        // });\r\n        \r\n        try{\r\n        const response =await UserRegistration (data);\r\n        // if (registerStatus.status === 200) {\r\n        console.log(response.data);\r\n        this.setState ({\r\n            RegistrationUsername:'',\r\n            RegistrationEmail:'',\r\n            RegistrationPassword:'',\r\n            register: true,\r\n            error: false,\r\n            isLoading:false,\r\n            fieldErrors: {},\r\n            registerError: null\r\n        });\r\n        }\r\n        catch(err) {\r\n            console.log(err.response.data.errors)\r\n            if(err.response.data.errors){\r\n                this.setState({\r\n                    error: true,\r\n                    register: false,\r\n                    isLoading:false,\r\n                    fieldErrors:err.response.data.errors,\r\n                    registerError: err.response.data\r\n                });\r\n            }else{\r\n                this.setState({\r\n                    error: true,\r\n                    register: false,\r\n                    isLoading:false,\r\n                    fieldErrors:err.response.data.msg,\r\n                    registerError: err.response.data\r\n                });\r\n            }\r\n    }\r\n        \r\n    };\r\n\r\n    render() {\r\n\r\n        const {\r\n          isLoading,\r\n          token,\r\n          register,\r\n          error,\r\n          registerError,\r\n          RegistrationUsername,\r\n          RegistrationEmail,\r\n          RegistrationPassword,\r\n          fieldErrors,\r\n        } = this.state;\r\n\r\n        if (isLoading) {\r\n            return (<div><p>Loading...</p></div>);\r\n        }\r\n\r\n        return(\r\n            <div className=\"Registration\">\r\n                <div>\r\n                    <input\r\n                    type=\"username\"\r\n                    placeholder=\"Username\"\r\n                    value={RegistrationUsername}\r\n                    onChange={this.onTextboxChangeRegistrationUsername}\r\n                    /><br />\r\n                    <input\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={RegistrationEmail}\r\n                    onChange={this.onTextboxChangeRegistrationEmail}\r\n                    />\r\n                    {fieldErrors.email && (\r\n                    <div className=\"invalid-feedback\">{fieldErrors.email}</div>\r\n                    )}\r\n                    <br />\r\n                    \r\n                    <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={RegistrationPassword}\r\n                    onChange={this.onTextboxChangeRegistrationPassword}\r\n                    />\r\n                    {fieldErrors.email && (\r\n                    <div className=\"invalid-feedback\">{fieldErrors.email}</div>\r\n                    )}\r\n                    <br />\r\n                    <button onClick={this.onSignUp}>Sign Up</button>\r\n                </div>\r\n                {JSON.stringify(this.state)}\r\n                {' '}\r\n                {registerError && \r\n                    (<div>\r\n                        {registerError}\r\n                    </div>) \r\n                }\r\n                {' '}\r\n                {error && <Error message={ERROR_IN_REGISTRATION} />}\r\n                {' '}\r\n                {register && <Message message={REGISTRATION_MESSAGE} />}\r\n                {' '}\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n};"]},"metadata":{},"sourceType":"module"}