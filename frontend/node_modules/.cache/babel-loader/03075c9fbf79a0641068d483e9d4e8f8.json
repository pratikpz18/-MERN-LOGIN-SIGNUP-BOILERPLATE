{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\pratik web\\\\z-insta\\\\frontend\\\\src\\\\components\\\\Login.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { UserLogin } from '../services/LoginService';\nimport { LOGIN_MESSAGE, ERROR_IN_LOGIN } from '../MessageBundle';\nexport default class Registration extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      token: '',\n      LoginEmail: '',\n      LoginPassword: '',\n      login: false,\n      error: false,\n      LoginError: '',\n      fieldError: {}\n    };\n    this.onTextboxChangeLoginEmail = this.onTextboxChangeLoginEmail.bind(this);\n    this.onTextboxChangeLoginPassword = this.onTextboxChangeLoginPassword.bind(this);\n    this.onSignIn = this.onSignIn.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: false\n    });\n  }\n\n  onTextboxChangeLoginEmail(event) {\n    this.setState({\n      LoginEmail: event.target.value\n    });\n  }\n\n  onTextboxChangeLoginPassword(event) {\n    this.setState({\n      LoginPassword: event.target.value\n    });\n  }\n\n  async onSignUp() {\n    const {\n      LoginEmail,\n      LoginPassword\n    } = this.state;\n    this.setState({\n      isLoading: true\n    });\n    this.setState({\n      LoginError: '',\n      fieldError: {}\n    });\n    const data = {\n      email: LoginEmail,\n      password: LoginPassword\n    };\n\n    try {\n      const LoginStatus = await UserLogin(data); // if (registerStatus.status === 200) {\n\n      console.log(LoginStatus);\n      this.setState({\n        isLoading: true,\n        token: '',\n        LoginEmail: '',\n        LoginPassword: '',\n        login: false,\n        error: false,\n        LoginError: '',\n        fieldError: {}\n      });\n    } catch (err) {\n      console.log(err.response.data);\n\n      if (err.response && err.response.data) {\n        if (err.response.data.errors) {\n          this.setState({\n            error: true,\n            login: false,\n            isLoading: false,\n            fieldError: err.response.data.errors\n          });\n        } else if (err.response.data.msg) {\n          this.setState({\n            error: true,\n            login: false,\n            isLoading: false,\n            registerError: err.response.data.msg\n          });\n        }\n      }\n    }\n  }\n\n  render() {\n    const {\n      isLoading,\n      token,\n      LoginEmail,\n      LoginPassword,\n      login,\n      error,\n      LoginError,\n      fieldError\n    } = this.state;\n\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Login\",\n      children: [' ', /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: [' ', error && /*#__PURE__*/_jsxDEV(Error, {\n          message: ERROR_IN_LOGIN\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 31\n        }, this), ' ', login && /*#__PURE__*/_jsxDEV(Message, {\n          message: LOGIN_MESSAGE\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 31\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"LOGIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          autoComplete: \"Email\",\n          value: LoginEmail,\n          onChange: this.onTextboxChangeLoginEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: LoginPassword,\n          autoComplete: \"password\",\n          onChange: this.onTextboxChangeLoginPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 23\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.onSignIn,\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this), ' ', /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/register\",\n            children: \" Register \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/pratik web/z-insta/frontend/src/components/Login.js"],"names":["React","Component","Link","UserLogin","LOGIN_MESSAGE","ERROR_IN_LOGIN","Registration","constructor","props","state","isLoading","token","LoginEmail","LoginPassword","login","error","LoginError","fieldError","onTextboxChangeLoginEmail","bind","onTextboxChangeLoginPassword","onSignIn","componentDidMount","setState","event","target","value","onSignUp","data","email","password","LoginStatus","console","log","err","response","errors","msg","registerError","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SACIC,aADJ,EAEIC,cAFJ,QAGS,kBAHT;AAKA,eAAe,MAAMC,YAAN,SAA2BL,SAA3B,CAAoC;AAC/CM,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAG,IADH;AAETC,MAAAA,KAAK,EAAC,EAFG;AAGTC,MAAAA,UAAU,EAAC,EAHF;AAITC,MAAAA,aAAa,EAAC,EAJL;AAKTC,MAAAA,KAAK,EAAE,KALE;AAMTC,MAAAA,KAAK,EAAE,KANE;AAOTC,MAAAA,UAAU,EAAE,EAPH;AAQTC,MAAAA,UAAU,EAAC;AARF,KAAb;AAWA,SAAKC,yBAAL,GAAiC,KAAKA,yBAAL,CAA+BC,IAA/B,CAAoC,IAApC,CAAjC;AACA,SAAKC,4BAAL,GAAoC,KAAKA,4BAAL,CAAkCD,IAAlC,CAAuC,IAAvC,CAApC;AACA,SAAKE,QAAL,GAAgB,KAAKA,QAAL,CAAcF,IAAd,CAAmB,IAAnB,CAAhB;AAEH;;AAEDG,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,QAAL,CAAc;AACZb,MAAAA,SAAS,EAAE;AADC,KAAd;AAGH;;AAEDQ,EAAAA,yBAAyB,CAACM,KAAD,EAAQ;AAC7B,SAAKD,QAAL,CAAc;AACVX,MAAAA,UAAU,EAAEY,KAAK,CAACC,MAAN,CAAaC;AADf,KAAd;AAGH;;AAEDN,EAAAA,4BAA4B,CAACI,KAAD,EAAQ;AAChC,SAAKD,QAAL,CAAc;AACVV,MAAAA,aAAa,EAAEW,KAAK,CAACC,MAAN,CAAaC;AADlB,KAAd;AAGH;;AAED,QAAMC,QAAN,GAAiB;AACb,UAAM;AACFf,MAAAA,UADE;AAEFC,MAAAA;AAFE,QAGF,KAAKJ,KAHT;AAKA,SAAKc,QAAL,CAAc;AACXb,MAAAA,SAAS,EAAE;AADA,KAAd;AAIA,SAAKa,QAAL,CAAc;AACVP,MAAAA,UAAU,EAAE,EADF;AAEVC,MAAAA,UAAU,EAAC;AAFD,KAAd;AAKA,UAAMW,IAAI,GAAG;AACTC,MAAAA,KAAK,EAACjB,UADG;AAETkB,MAAAA,QAAQ,EAAEjB;AAFD,KAAb;;AAKA,QAAG;AACC,YAAMkB,WAAW,GAAE,MAAM5B,SAAS,CAAEyB,IAAF,CAAlC,CADD,CAEC;;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACA,WAAKR,QAAL,CAAe;AACXb,QAAAA,SAAS,EAAG,IADD;AAEXC,QAAAA,KAAK,EAAC,EAFK;AAGXC,QAAAA,UAAU,EAAC,EAHA;AAIXC,QAAAA,aAAa,EAAC,EAJH;AAKXC,QAAAA,KAAK,EAAE,KALI;AAMXC,QAAAA,KAAK,EAAE,KANI;AAOXC,QAAAA,UAAU,EAAE,EAPD;AAQXC,QAAAA,UAAU,EAAC;AARA,OAAf;AAUH,KAdD,CAeA,OAAMiB,GAAN,EAAU;AACNF,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAG,CAACC,QAAJ,CAAaP,IAAzB;;AACA,UAAIM,GAAG,CAACC,QAAJ,IAAgBD,GAAG,CAACC,QAAJ,CAAaP,IAAjC,EAAuC;AACnC,YAAGM,GAAG,CAACC,QAAJ,CAAaP,IAAb,CAAkBQ,MAArB,EAA4B;AACxB,eAAKb,QAAL,CAAc;AACVR,YAAAA,KAAK,EAAE,IADG;AAEVD,YAAAA,KAAK,EAAE,KAFG;AAGVJ,YAAAA,SAAS,EAAC,KAHA;AAIVO,YAAAA,UAAU,EAACiB,GAAG,CAACC,QAAJ,CAAaP,IAAb,CAAkBQ;AAJnB,WAAd;AAMH,SAPD,MAQK,IAAGF,GAAG,CAACC,QAAJ,CAAaP,IAAb,CAAkBS,GAArB,EAAyB;AAC1B,eAAKd,QAAL,CAAc;AACdR,YAAAA,KAAK,EAAE,IADO;AAEdD,YAAAA,KAAK,EAAE,KAFO;AAGdJ,YAAAA,SAAS,EAAC,KAHI;AAId4B,YAAAA,aAAa,EAAEJ,GAAG,CAACC,QAAJ,CAAaP,IAAb,CAAkBS;AAJnB,WAAd;AAMP;AACJ;AAEA;AAEJ;;AAEDE,EAAAA,MAAM,GAAE;AAEJ,UAAM;AACF7B,MAAAA,SADE;AAEFC,MAAAA,KAFE;AAGFC,MAAAA,UAHE;AAIFC,MAAAA,aAJE;AAKFC,MAAAA,KALE;AAMFC,MAAAA,KANE;AAOFC,MAAAA,UAPE;AAQFC,MAAAA;AARE,QASF,KAAKR,KATT;;AAWA,QAAIC,SAAJ,EAAe;AACX,0BAAQ;AAAA,+BAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cAAR;AACH;;AAID,wBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,iBACK,GADL,eAEI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,mBACK,GADL,EAEKK,KAAK,iBAAI,QAAC,KAAD;AAAO,UAAA,OAAO,EAAEV;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAFd,EAGK,GAHL,EAIKS,KAAK,iBAAI,QAAC,OAAD;AAAS,UAAA,OAAO,EAAEV;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAJd,EAKK,GALL;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EASK,GATL,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,EAWK,GAXL,eAYI;AAAA,gCACI;AACA,UAAA,IAAI,EAAC,OADL;AAEA,UAAA,WAAW,EAAC,OAFZ;AAGA,UAAA,YAAY,EAAC,OAHb;AAIA,UAAA,KAAK,EAAEQ,UAJP;AAKA,UAAA,QAAQ,EAAE,KAAKM;AALf;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOM;AAAA;AAAA;AAAA;AAAA,gBAPN,eAQI;AACA,UAAA,IAAI,EAAC,UADL;AAEA,UAAA,WAAW,EAAC,UAFZ;AAGA,UAAA,KAAK,EAAEL,aAHP;AAIA,UAAA,YAAY,EAAC,UAJb;AAKA,UAAA,QAAQ,EAAE,KAAKO;AALf;AAAA;AAAA;AAAA;AAAA,gBARJ,eAcM;AAAA;AAAA;AAAA;AAAA,gBAdN,EAeK,GAfL,eAgBI;AAAA,kCACI;AAAQ,YAAA,OAAO,EAAE,KAAKC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEK,GAFL,eAGI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBJ,EAqBK,GArBL;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAsCH;;AA5J8C","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserLogin } from '../services/LoginService';\r\nimport {\r\n    LOGIN_MESSAGE,\r\n    ERROR_IN_LOGIN,\r\n  } from '../MessageBundle';\r\n\r\nexport default class Registration extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading : true,\r\n            token:'',\r\n            LoginEmail:'',\r\n            LoginPassword:'',\r\n            login: false,\r\n            error: false,\r\n            LoginError: '',\r\n            fieldError:{}\r\n        };\r\n\r\n        this.onTextboxChangeLoginEmail = this.onTextboxChangeLoginEmail.bind(this);\r\n        this.onTextboxChangeLoginPassword = this.onTextboxChangeLoginPassword.bind(this);\r\n        this.onSignIn = this.onSignIn.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n          isLoading: false\r\n        });\r\n    };\r\n\r\n    onTextboxChangeLoginEmail(event) {\r\n        this.setState({\r\n            LoginEmail: event.target.value,\r\n        });\r\n    }\r\n\r\n    onTextboxChangeLoginPassword(event) {\r\n        this.setState({\r\n            LoginPassword: event.target.value,\r\n        });\r\n    }\r\n\r\n    async onSignUp() {\r\n        const {\r\n            LoginEmail,\r\n            LoginPassword\r\n        } = this.state;\r\n\r\n        this.setState({\r\n           isLoading: true,\r\n        });\r\n\r\n        this.setState({\r\n            LoginError: '',\r\n            fieldError:{}\r\n        })\r\n\r\n        const data = {\r\n            email:LoginEmail,\r\n            password: LoginPassword,\r\n        };\r\n\r\n        try{\r\n            const LoginStatus =await UserLogin (data);\r\n            // if (registerStatus.status === 200) {\r\n            console.log(LoginStatus);\r\n            this.setState ({\r\n                isLoading : true,\r\n                token:'',\r\n                LoginEmail:'',\r\n                LoginPassword:'',\r\n                login: false,\r\n                error: false,\r\n                LoginError: '',\r\n                fieldError:{}\r\n            });\r\n        }\r\n        catch(err){\r\n            console.log(err.response.data)\r\n            if (err.response && err.response.data) {\r\n                if(err.response.data.errors){\r\n                    this.setState({\r\n                        error: true,\r\n                        login: false,\r\n                        isLoading:false,\r\n                        fieldError:err.response.data.errors\r\n                    });\r\n                }\r\n                else if(err.response.data.msg){\r\n                    this.setState({\r\n                    error: true,\r\n                    login: false,\r\n                    isLoading:false,\r\n                    registerError: err.response.data.msg,\r\n                });\r\n            }\r\n        }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        const {\r\n            isLoading,\r\n            token,\r\n            LoginEmail,\r\n            LoginPassword,\r\n            login,\r\n            error,\r\n            LoginError,\r\n            fieldError\r\n        } = this.state;\r\n\r\n        if (isLoading) {\r\n            return (<div><p>Loading...</p></div>);\r\n        }\r\n\r\n\r\n\r\n        return(\r\n            <div className=\"Login\">\r\n                {' '}\r\n                <div className=\"status\">\r\n                    {' '}\r\n                    {error && <Error message={ERROR_IN_LOGIN} />}\r\n                    {' '}\r\n                    {login && <Message message={LOGIN_MESSAGE} />}\r\n                    {' '}\r\n                </div>\r\n                {' '}\r\n                <h1>LOGIN</h1>\r\n                {' '}\r\n                <div>\r\n                    <input\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    autoComplete=\"Email\"\r\n                    value={LoginEmail}\r\n                    onChange={this.onTextboxChangeLoginEmail}\r\n                    /><br />\r\n                    <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={LoginPassword}\r\n                    autoComplete=\"password\"\r\n                    onChange={this.onTextboxChangeLoginPassword}\r\n                    /><br />\r\n                    {' '}\r\n                    <div>\r\n                        <button onClick={this.onSignIn}>Sign In</button>\r\n                        {' '}\r\n                        <Link to=\"/register\"> Register </Link>\r\n                    </div>\r\n                    {' '}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}