{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\pratik web\\\\z-insta\\\\frontend\\\\src\\\\components\\\\Registration.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { UserRegistration } from '../services/RegistrationService';\nimport axios from 'axios';\nimport Message from '../elements/Message';\nimport Error from '../elements/Error';\nimport { REGISTRATION_MESSAGE, ERROR_IN_REGISTRATION } from '../MessageBundle';\nexport default class Registration extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      token: '',\n      RegistrationUsername: '',\n      RegistrationEmail: '',\n      RegistrationPassword: '',\n      register: false,\n      error: false,\n      registerError: '',\n      fieldError: {}\n    };\n    this.onTextboxChangeRegistrationUsername = this.onTextboxChangeRegistrationUsername.bind(this);\n    this.onTextboxChangeRegistrationEmail = this.onTextboxChangeRegistrationEmail.bind(this);\n    this.onTextboxChangeRegistrationPassword = this.onTextboxChangeRegistrationPassword.bind(this);\n    this.onSignUp = this.onSignUp.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: false\n    });\n  }\n\n  onTextboxChangeRegistrationUsername(event) {\n    this.setState({\n      RegistrationUsername: event.target.value\n    });\n  }\n\n  onTextboxChangeRegistrationEmail(event) {\n    this.setState({\n      RegistrationEmail: event.target.value\n    });\n  }\n\n  onTextboxChangeRegistrationPassword(event) {\n    this.setState({\n      RegistrationPassword: event.target.value\n    });\n  }\n\n  async onSignUp() {\n    const {\n      RegistrationUsername,\n      RegistrationEmail,\n      RegistrationPassword\n    } = this.state;\n    this.setState({\n      isLoading: true\n    });\n    this.setState({\n      registerError: '',\n      fieldError: {}\n    });\n    const data = {\n      email: RegistrationEmail,\n      username: RegistrationUsername,\n      password: RegistrationPassword\n    }; // axios.post('http://localhost:4000/users/register', data)\n    //     .then(res => {\n    //         console.log('res:', res);\n    //         if (res.status===200) {\n    //             this.setState ({\n    //                 RegistrationUsername:'',\n    //                 RegistrationEmail:'',\n    //                 RegistrationPassword:'',\n    //                 register: true,\n    //                 error: false,\n    //                 isLoading:false,\n    //         });\n    //         } else\n    //             this.setState ({\n    //             error: true,\n    //             register: false,\n    //             isLoading:false,\n    //         });\n    // .catch(function (error) {\n    //     console.log(error);\n    // });\n    // });\n\n    try {\n      const registerStatus = await UserRegistration(data); // if (registerStatus.status === 200) {\n\n      console.log(registerStatus);\n      this.setState({\n        RegistrationUsername: '',\n        RegistrationEmail: '',\n        RegistrationPassword: '',\n        register: true,\n        error: false,\n        isLoading: false,\n        registerError: '',\n        fieldError: {}\n      });\n    } catch (err) {\n      console.log(err.response.data);\n\n      if (err.response && err.response.data) {\n        if (err.response.data.errors) {\n          this.setState({\n            error: true,\n            register: false,\n            isLoading: false,\n            fieldError: err.response.data.errors\n          });\n        } else if (err.response.data.msg) {\n          this.setState({\n            error: true,\n            register: false,\n            isLoading: false,\n            registerError: err.response.data.msg\n          });\n        }\n      }\n    }\n  }\n\n  render() {\n    const {\n      isLoading,\n      token,\n      register,\n      error,\n      registerError,\n      RegistrationUsername,\n      RegistrationEmail,\n      RegistrationPassword,\n      fieldError\n    } = this.state;\n\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }, this);\n    }\n\n    if (!token) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Registration\",\n        children: [' ', /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status\",\n          children: [' ', error && /*#__PURE__*/_jsxDEV(Error, {\n            message: ERROR_IN_REGISTRATION\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 39\n          }, this), ' ', register && /*#__PURE__*/_jsxDEV(Message, {\n            message: REGISTRATION_MESSAGE\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 42\n          }, this), ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"REGISTER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"username\",\n            placeholder: \"Username\",\n            autoComplete: \"Username\",\n            value: RegistrationUsername,\n            onChange: this.onTextboxChangeRegistrationUsername\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email\",\n            autoComplete: \"Email\",\n            value: RegistrationEmail,\n            onChange: this.onTextboxChangeRegistrationEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 31\n          }, this), ' ', fieldError.email && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: fieldError.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 29\n          }, this), ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            value: RegistrationPassword,\n            autoComplete: \"password\",\n            onChange: this.onTextboxChangeRegistrationPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 31\n          }, this), ' ', fieldError.password && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: fieldError.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this), ' ', ' ', /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.onSignUp,\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 33\n            }, this), ' ', /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              children: \" Login \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 29\n          }, this), ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }, this), ' ', ' ', registerError && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: registerError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 30\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Signed in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n;","map":{"version":3,"sources":["C:/pratik web/z-insta/frontend/src/components/Registration.js"],"names":["React","Component","Link","UserRegistration","axios","Message","Error","REGISTRATION_MESSAGE","ERROR_IN_REGISTRATION","Registration","constructor","props","state","isLoading","token","RegistrationUsername","RegistrationEmail","RegistrationPassword","register","error","registerError","fieldError","onTextboxChangeRegistrationUsername","bind","onTextboxChangeRegistrationEmail","onTextboxChangeRegistrationPassword","onSignUp","componentDidMount","setState","event","target","value","data","email","username","password","registerStatus","console","log","err","response","errors","msg","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserRegistration } from '../services/RegistrationService';\r\nimport axios from 'axios';\r\nimport Message from '../elements/Message';\r\nimport Error from '../elements/Error';\r\nimport {\r\n    REGISTRATION_MESSAGE,\r\n    ERROR_IN_REGISTRATION,\r\n  } from '../MessageBundle';\r\n\r\nexport default class Registration extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading : true,\r\n            token:'',\r\n            RegistrationUsername:'',\r\n            RegistrationEmail:'',\r\n            RegistrationPassword:'',\r\n            register: false,\r\n            error: false,\r\n            registerError: '',\r\n            fieldError:{}\r\n        };\r\n\r\n        this.onTextboxChangeRegistrationUsername = this.onTextboxChangeRegistrationUsername.bind(this);\r\n        this.onTextboxChangeRegistrationEmail = this.onTextboxChangeRegistrationEmail.bind(this);\r\n        this.onTextboxChangeRegistrationPassword = this.onTextboxChangeRegistrationPassword.bind(this);\r\n        this.onSignUp = this.onSignUp.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n          isLoading: false\r\n        });\r\n    };\r\n\r\n    onTextboxChangeRegistrationUsername(event) {\r\n        this.setState({\r\n            RegistrationUsername: event.target.value,\r\n        });\r\n    }\r\n\r\n    onTextboxChangeRegistrationEmail(event) {\r\n        this.setState({\r\n            RegistrationEmail: event.target.value,\r\n        });\r\n    }\r\n\r\n    onTextboxChangeRegistrationPassword(event) {\r\n        this.setState({\r\n            RegistrationPassword: event.target.value,\r\n        });\r\n    }\r\n\r\n    async onSignUp() {\r\n        const {\r\n            RegistrationUsername,\r\n            RegistrationEmail,\r\n            RegistrationPassword\r\n        } = this.state;\r\n\r\n        this.setState({\r\n           isLoading: true,\r\n        });\r\n\r\n        this.setState({\r\n            registerError: '',\r\n            fieldError:{}\r\n        })\r\n      \r\n\r\n        const data = {\r\n            email:RegistrationEmail,\r\n            username: RegistrationUsername,\r\n            password: RegistrationPassword,\r\n        };\r\n\r\n        // axios.post('http://localhost:4000/users/register', data)\r\n        //     .then(res => {\r\n        //         console.log('res:', res);\r\n        //         if (res.status===200) {\r\n        //             this.setState ({\r\n        //                 RegistrationUsername:'',\r\n        //                 RegistrationEmail:'',\r\n        //                 RegistrationPassword:'',\r\n        //                 register: true,\r\n        //                 error: false,\r\n        //                 isLoading:false,\r\n        //         });\r\n        //         } else\r\n        //             this.setState ({\r\n        //             error: true,\r\n        //             register: false,\r\n        //             isLoading:false,\r\n        //         });\r\n            // .catch(function (error) {\r\n            //     console.log(error);\r\n            // });\r\n        // });\r\n        \r\n        try{\r\n        const registerStatus =await UserRegistration (data);\r\n        // if (registerStatus.status === 200) {\r\n        console.log(registerStatus);\r\n        this.setState ({\r\n            RegistrationUsername:'',\r\n            RegistrationEmail:'',\r\n            RegistrationPassword:'',\r\n            register: true,\r\n            error: false,\r\n            isLoading:false,\r\n            registerError:'',\r\n            fieldError:{}\r\n        });\r\n        }\r\n        catch(err) {\r\n            console.log(err.response.data)\r\n            if (err.response && err.response.data) {\r\n                if(err.response.data.errors){\r\n                    this.setState({\r\n                        error: true,\r\n                        register: false,\r\n                        isLoading:false,\r\n                        fieldError:err.response.data.errors\r\n                    });\r\n                }\r\n                else if(err.response.data.msg){\r\n                    this.setState({\r\n                    error: true,\r\n                    register: false,\r\n                    isLoading:false,\r\n                    registerError: err.response.data.msg,\r\n                });\r\n\r\n\r\n        }\r\n        }\r\n   \r\n    }\r\n        \r\n    };\r\n\r\n    \r\n        render() {\r\n\r\n            const {\r\n            isLoading,\r\n            token,\r\n            register,\r\n            error,\r\n            registerError,\r\n            RegistrationUsername,\r\n            RegistrationEmail,\r\n            RegistrationPassword,\r\n            fieldError\r\n            } = this.state;\r\n\r\n            if (isLoading) {\r\n                return (<div><p>Loading...</p></div>);\r\n            }\r\n            \r\n            if (!token) {\r\n                return(\r\n                    <div className=\"Registration\">\r\n                        {' '}\r\n                        <div className=\"status\">\r\n                            {' '}\r\n                            {error && <Error message={ERROR_IN_REGISTRATION} />}\r\n                            {' '}\r\n                            {register && <Message message={REGISTRATION_MESSAGE} />}\r\n                            {' '}\r\n                        </div>\r\n                        {' '}\r\n                        <div>\r\n                            <h1>REGISTER</h1>\r\n                        </div>\r\n                        {' '}\r\n                        <div>\r\n                            <input\r\n                            type=\"username\"\r\n                            placeholder=\"Username\"\r\n                            autoComplete=\"Username\"\r\n                            value={RegistrationUsername}\r\n                            onChange={this.onTextboxChangeRegistrationUsername}\r\n                            /><br />\r\n                            <input\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            autoComplete=\"Email\"\r\n                            value={RegistrationEmail}\r\n                            onChange={this.onTextboxChangeRegistrationEmail}\r\n                            /><br />\r\n                            {' '}\r\n                            {fieldError.email && (\r\n                            <div >{fieldError.email}</div>\r\n                            )}\r\n                            {' '}\r\n                            <input\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            value={RegistrationPassword}\r\n                            autoComplete=\"password\"\r\n                            onChange={this.onTextboxChangeRegistrationPassword}\r\n                            /><br />\r\n                            {' '}\r\n                            {fieldError.password && (\r\n                            <div >{fieldError.password}</div>\r\n                            )}\r\n                            {' '}\r\n                            {' '}\r\n                            <div>\r\n                                <button onClick={this.onSignUp}>Sign Up</button>\r\n                                {' '}\r\n                                <Link to=\"/login\"> Login </Link>\r\n                            </div>\r\n                            {' '}\r\n                        </div>{' '}\r\n                        {' '}\r\n                        {registerError && \r\n                            (<div>\r\n                                {registerError}\r\n                            </div>) \r\n                        }\r\n                        {' '}\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            return (\r\n                <div>\r\n                  <p>Signed in</p>\r\n                </div>\r\n              );\r\n        }\r\n\r\n};"]},"metadata":{},"sourceType":"module"}